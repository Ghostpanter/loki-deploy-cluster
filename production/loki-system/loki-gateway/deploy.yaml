apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: loki-gateway
  name: loki-gateway
  namespace: loki
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: loki-gateway
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: loki-gateway
    spec:
      affinity:
        podAffinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: loki-gateway
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
      containers:
      - image: nginx:1.15.1-alpine
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 120
          periodSeconds: 30
          successThreshold: 1
          tcpSocket:
            port: 3100
          timeoutSeconds: 5
        name: loki-gateway
        ports:
        - containerPort: 3100
          name: http-3100
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 2Gi
          requests:
            cpu: 200m
            memory: 256Mi
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          name: loki-gateway-config
          readOnly: true
          subPath: nginx.conf
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
      - configMap:
          defaultMode: 420
          name: loki-gateway
        name: loki-gateway-config